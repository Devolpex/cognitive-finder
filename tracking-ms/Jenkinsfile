pipeline {
    agent any
    tools{
        jdk 'JDK21'
        maven 'maven-3.8.7'
    }

    environment {
        // Define Docker Hub credentials and repository details
        DOCKER_CREDENTIALS_ID = 'docker'  // Jenkins credentials for Docker Hub
        DOCKER_IMAGE_NAME = 'devolpex/cog-tracking-ms'  // Docker image name (change to your repo)
        DOCKER_TAG = '0.0.6'  // Docker image tag, change as necessary (e.g., use build number or commit hash)

        // SonarScanner configuration
        SONAR_TOKEN = credentials('sonar-token') // SonarCloud token stored in Jenkins credentials
        SONAR_ORGANIZATION = 'devolpex'
        SONAR_PROJECT_KEY = 'Devolpex_cognitive-finder'
        SONAR_HOST_URL = 'https://sonarcloud.io'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'dev', credentialsId: 'github', url: 'https://github.com/Devolpex/cognitive-finder'
            }
        }
        
        stage('Run Tests') {
            steps {
                dir('tracking-ms') {
                    sh 'mvn test'
                }
            }
        }

        stage('SonarQube Analysis') {
            steps {
                dir('tracking-ms') {
                    sh """
                        sonar-scanner \
                          -Dsonar.organization=${SONAR_ORGANIZATION} \
                          -Dsonar.projectKey=${SONAR_PROJECT_KEY} \
                          -Dsonar.sources=. \
                          -Dsonar.host.url=${SONAR_HOST_URL} \
                          -Dsonar.login=${SONAR_TOKEN}
                    """
                }
            }
        }

        stage('Build JAR') {
            steps {
                dir('tracking-ms') {
                    sh 'mvn clean package'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('tracking-ms') {
                    script {
                        sh """
                            docker build -t ${DOCKER_IMAGE_NAME}:${DOCKER_TAG} .
                        """
                    }
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    // Login to Docker Hub (using Jenkins credentials)
                    withCredentials([usernamePassword(credentialsId: DOCKER_CREDENTIALS_ID, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD')]) {
                        sh """
                            echo \$DOCKER_PASSWORD | docker login -u \$DOCKER_USERNAME --password-stdin
                            docker push ${DOCKER_IMAGE_NAME}:${DOCKER_TAG}
                        """
                    }
                }
            }
        }
    }
}
